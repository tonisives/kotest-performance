plugins {
    id "org.jetbrains.kotlin.jvm"
    id "application"
//    id("com.google.devtools.ksp") version "1.8.21-1.0.11"

    // CI
    id "org.barfuin.gradle.jacocolog" version "3.1.0"
    id "io.gitlab.arturbosch.detekt" version "1.22.0"
}

repositories {
    mavenCentral()
}

apply from: "app.gradle"

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

group = "com.tonisives"
version = "0"

dependencies {
    implementation "io.klogging:klogging-jvm:0.5.6"
    implementation "io.klogging:slf4j-klogging:0.3.5"

    implementation "io.sentry:sentry:6.28.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"

    implementation "io.arrow-kt:arrow-core:1.2.0"
    implementation "io.arrow-kt:arrow-optics:1.2.0"

    implementation 'software.amazon.awssdk:dynamodb-enhanced:2.20.148'

    // metrics
    implementation "io.micrometer:micrometer-registry-prometheus:1.11.3"
    implementation('org.springframework.boot:spring-boot-starter-web:3.1.0') {
        exclude group: "jakarta.validation", module: "jakarta.validation-api"
        exclude group: "ch.qos.logback"
    }
    implementation('org.springframework.boot:spring-boot-starter-actuator:3.1.2') {
        exclude group: "ch.qos.logback"
    }

    testImplementation "io.kotest:kotest-runner-junit5:5.7.2"
    testImplementation 'io.kotest:kotest-assertions-core:5.7.2'
    testImplementation "io.kotest.extensions:kotest-assertions-arrow:1.3.3"
    testImplementation "io.mockk:mockk-jvm:1.13.5"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging {
        exceptionFormat = 'full'
    }
}

detekt {
    ignoreFailures = true // ignore failures while developing // TODO: remove
}